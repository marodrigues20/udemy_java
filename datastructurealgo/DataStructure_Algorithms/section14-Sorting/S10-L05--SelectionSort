Selection Sort

- The Selection sort algorithm is based on the idea of finding the minimum or
maximum element in an unsorted array and then putting it in its correct position
in a sorted array.

SelectionSort(A):
  loop: j = 0 to n-1
    int iMin = j;
    loop: i = j+1 to n-1
      if (a[i] < a[iMin])
        iMin=i
      if (iMin != j)
        swap(a[j], a[iMin]);


--------------------------------------------------------------------------------

SelectionSort(A):
  loop: j = 0 to n-1 ------------------------------------- O(n)  _ _
    int iMin = j; -------------------- O(1) ---|                    |
    loop: i = j+1 to n-1 ------------- O(n)    |                    |
      if (a[i] < a[iMin]) ------------ O(1)    |---------- O(n)     |---- O(n^2)
        iMin=i ----------------------- O(1)    |                    |
      if (iMin != j) ----------------- O(1) ---|                 _ _|
        swap(a[j], a[iMin]); --------- O(1)


Time Complexity  - O(n^2)
Space Complexity - O(1)


--------------------------------------------------------------------------------

When to Use/Avoid Selection

- When to use:
  - When we don't have additional memory
  - Want easy implementation

When not to use:
 - When time complexity is a concern 
