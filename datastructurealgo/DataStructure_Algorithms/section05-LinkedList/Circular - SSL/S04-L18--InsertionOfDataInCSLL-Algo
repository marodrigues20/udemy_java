Insertion in Circular Single List:

  create a blank node
  node.value = nodeValue;
  if (!existsLinkedList(head))
    return error //Linked List does not exist
  else if (location equals 0) //insert at first position
    node.next = head;
    head = node; tail.next = head;
  else if ( location equals last ) //insert at last position
    node.next = head;
    tail.next = node
    tail = node //to keep track of last node
  else //insert at specified location
    loop: tmpNode = 0 to location - 1 //loop till we reach specified node and end the loop
    node.next = tmpNode.next
    tmpNode.next = node


----------------------------------------------------------------------------------

Time Complexity - Insertion in Circular Single Linked List:


Insertion in Circular Single List: ---------------------------------------------------------------- O(1)
  create a blank node ----------------------------------------------------------------------------- O(1)
  node.value = nodeValue; ------------------------------------------------------------------------- O(1)
  if (!existsLinkedList(head)) -------------------------------------------------------------------- O(1)
    return error //Linked List does not exist ----------------------------------------------------- O(1)
  else if (location equals 0) //insert at first position ------------------------------------------ O(1)
    node.next = head; ----------------------------------------------------------------------------- O(1)
    head = node; tail.next = head; ---------------------------------------------------------------- O(1)
  else if ( location equals last ) //insert at last position -------------------------------------- O(1)
    node.next = head; ----------------------------------------------------------------------------- O(1)
    tail.next = node ------------------------------------------------------------------------------ O(1)
    tail = node //to keep track of last node ------------------------------------------------------ O(1)
  else //insert at specified location ------------------------------------------------------------- O(1)
    loop: tmpNode = 0 to location - 1 //loop till we reach specified node and end the loop -------- O(n)
    node.next = tmpNode.next ---------------------------------------------------------------------- O(1)
    tmpNode.next = node --------------------------------------------------------------------------- O(1)


  Time Complexity - O(n)
  Spece Complexity - O(1)

-------------------------------------------------------------------------------
