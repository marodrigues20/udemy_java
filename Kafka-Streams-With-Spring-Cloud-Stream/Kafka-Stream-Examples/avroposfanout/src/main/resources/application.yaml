spring:
  cloud:
    stream: # Channels are created by Spring Cloud Streams
      bindings: # bellow channels definitions.
        notification-input-channel: #channel
          destination: avro-pos-topic    #topic for the channel
        notification-output-channel:
          destination: loyalty-topic
        hadoop-input-channel:
          destination: avro-pos-topic
        hadoop-output-channel:
          destination: hadoop-sink-topic
      kafka:
        streams:
          binder: # Configuration for Kafka Stream Binder
            brokers: localhost:9092
            configuration:
              schema.registry.url: http://localhost:8081
          bindings: # We don't care about input channels and respective Deserialization because JSON is default.
            notification-input-channel:
              consumer:
                valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
            notification-output-channel:
              producer:
                valueSerde: io.confluent.kafka.streams.serdes.json.KafkaJsonSchemaSerde
            hadoop-input-channel:
              consumer:
                valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
            hadoop-output-channel:
              producer:
                valueSerde: io.confluent.kafka.streams.serdes.json.KafkaJsonSchemaSerde